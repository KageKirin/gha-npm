name: npm-pack
inputs:
  path:
    description: path from where to run the actions
    type: string
    required: false
    default: ${{ github.workspace }}
  spec:
    description: package spec (path to package.json)
    type: string
    required: false
    default: package.json
  outdir:
    description: package spec (path to package.json)
    type: string
    required: false
    default: ./
outputs:
  json:
    description: JSON output of npm-pack
    value: ${{ steps.npm-pack.outputs.packjson }}
  package:
    description: package name (without path)
    value: ${{ steps.npm-pack.outputs.package }}
  package-full:
    description: package name with path
    value: ${{ steps.npm-pack.outputs.package_full }}
  contents:
    description: package contents (tar tvf)
    value: ${{ steps.list-contents.outputs.contents }}
runs:
  using: composite
  steps:
  - shell: bash
    run: |-
      pushd ${{ inputs.path }}
      mkdir -p {{ inputs.outdir }}
      popd
  - id: npm-pack
    shell: bash
    run: |-
      pushd ${{ inputs.path }}
      pushd $(dirname ${{ inputs.spec }})
      packjson=$(npm pack --pack-destination ${{ inputs.outdir }} --json | jq -cM)
      filename=$(echo ${packjson}     | jq -e ".[0].filename" -r)
      files=$(echo $(echo ${packjson} | jq -e ".[0].files[].path" -r))

      echo "packjson: ${packjson}"
      echo "filename: ${filename}"
      echo "files: ${files}"

      ls ${{ inputs.outdir }}/${filename}
      echo "package=${filename}" >> $GITHUB_OUTPUT
      echo "package_full=${{ inputs.outdir }}/${filename}" >> $GITHUB_OUTPUT
      echo "packjson='${packjson}'" >> $GITHUB_OUTPUT
      echo "files='${files}'" >> $GITHUB_OUTPUT
      popd
      popd
  - id: list-contents
    shell: bash
    run: |
      pushd ${{ inputs.path }}
      contents=$(tar tvf ${{ steps.npm-pack.outputs.package_full }})
      echo ${contents}
      echo "contents='${contents}'" >> $GITHUB_OUTPUT
      popd
