name: npm-add-registry
inputs:
  path:
    description: path from where to run the actions
    type: string
    required: false
    default: ${{ github.workspace }}
  config-file:
    description: npmrc file (defaults to '.npmrc')
    type: string
    required: false
    default: .npmrc
  registry:
    description: full registry URL including 'https://' and '@scope'
    required: false
    default: https://npm.pkg.github.com/@${{ github.repository_owner }}
  token:
    description: NPM registry token (e.g. GitHub token with package.write)
    required: true
outputs:
  registry:
    description: parsed registry
    value: ${{ steps.parse-registry.outputs.registry }}
  scope:
    description: parsed scope
    value: ${{ steps.parse-registry.outputs.scope }}
runs:
  using: composite
  steps:
  - id: parse-registry
    shell: bash
    run: |-
      registry=$(echo ${{ inputs.registry }} | tr '[:upper:]' '[:lower:]')
      echo "registry: $registry"

      scope=$(echo $registry | rg -o '@.+$' | tr '[:upper:]' '[:lower:]')
      echo "scope: $scope"

      registryPath=$(echo $registry | sed -e "s|https://||g" -e "s|/$scope||g")
      echo "registryPath: $registryPath"

      echo "scope=${scope}" >> $GITHUB_OUTPUT
      echo "registry=${registryPath}" >> $GITHUB_OUTPUT
  - id: check-parse-results
    shell: bash
    run: |-
      full_registry=$(echo ${{ inputs.registry }} | tr '[:upper:]' '[:lower:]')
      echo "full_registry: $full_registry"

      registry=${{ steps.parse-registry.outputs.registry }}
      echo "registry: $registry"
      scope=${{ steps.parse-registry.outputs.scope }}
      echo "scope: $scope"

      recomposed_registry="https://${registry}/${scope}"
      echo "recomposed_registry: $recomposed_registry"

      if [[ "${full_registry}" != "${recomposed_registry}" ]]; then
        echo "recomposed registry differs from input argument. please check inputs."
        exit 1
      fi
  - id: create-npmrc
    shell: bash
    run: |-
      pushd ${{ inputs.path }}

      registry=${{ steps.parse-registry.outputs.registry }}
      echo "registry: $registry"
      scope=${{ steps.parse-registry.outputs.scope }}
      echo "scope: $scope"
      token=${{ inputs.token }}

      echo "//${registry}/:_authToken=${token}" > ${{ inputs.config-file }}
      if [[ -n "${scope}" ]]; then
        echo "//${scope}:registry=${registry}/" >> ${{ inputs.config-file }}
      fi

      cat ${{ inputs.config-file }}
      popd
  - id: patch-package-json
    shell: bash
    run: |-
      pushd ${{ inputs.path }}

      registry=${{ steps.parse-registry.outputs.registry }}
      echo "registry: $registry"
      scope=${{ steps.parse-registry.outputs.scope }}
      echo "scope: $scope"
      publish_url="https://${registry}/${scope}"
      echo "publish_url: $publish_url"
      cat ${{ inputs.config-file }} | jq

      echo $(jq --arg v "${publish_url}" '.publishConfig.registry = $v' ${{ inputs.config-file }}) > ${{ inputs.config-file }}.shadow && cat ${{ inputs.config-file }}.shadow | jq > ${{ inputs.config-file }}

      cat ${{ inputs.config-file }} | jq
      zsh -c 'for a in `cat ${{ inputs.config-file }} | jq ".files[]" | xargs`; do; echo $a; ls -alG $a; fdfind --no-ignore --glob $a; done'

      if [[ $(echo ${publish_url} | rg github ) == "" ]]; then
        npm ping --registry ${publish_url}
      else
        echo "The GitHub NPM Registry does not support npm ping"
      fi

      popd
